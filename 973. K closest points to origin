class Solution {
public:
    typedef pair<int,vector<int>> pi;
    vector<vector<int>> kClosest(vector<vector<int>>& arr, int k) {
        vector<vector<int>>ans;
        priority_queue<pi> pq;
        for(vector<int>v : arr){
            int x = v[0];
            int y = v[1];
            int d = x*x + y*y ;
            pq.push({d,v});
            if(pq.size()>k) pq.pop();
        }
        while(pq.size()>0){
            vector<int> ele = pq.top().second;
            ans.push_back(ele);
            pq.pop();
        }
        return ans;
        
    }
};
